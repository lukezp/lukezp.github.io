<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lukezp&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lukezp.github.io/"/>
  <updated>2018-03-30T14:27:11.418Z</updated>
  <id>https://lukezp.github.io/</id>
  
  <author>
    <name>lukezp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在IDE中MAVEN提示错误</title>
    <link href="https://lukezp.github.io/2018/03/30/%E5%9C%A8IDE%E4%B8%ADMAVEN%E6%8F%90%E7%A4%BA%E9%94%99%E8%AF%AF/"/>
    <id>https://lukezp.github.io/2018/03/30/在IDE中MAVEN提示错误/</id>
    <published>2018-03-30T14:12:06.000Z</published>
    <updated>2018-03-30T14:27:11.418Z</updated>
    
    <content type="html"><![CDATA[<p>在IDE中导入Maven项目时，代码中有时会提示<code>找不到某某类</code>，基本上除JDK外得第三方包都出现红色提示。IDEA有以下几种方法解决（Eclipse的处理方法类似）：</p><ol><li><p>重新执行导入命令</p><blockquote><p>选中项目根目录，右击 -&gt; maven -&gt; Reimport </p></blockquote></li><li><p>清楚缓存并重启IDEA</p><blockquote><p>File-&gt;Invalidate Caches/Restart</p></blockquote></li><li><p>重新建立索引</p><blockquote><p>Build,Execution,Deployment -&gt; Build Tools -&gt; Maven -&gt; Repositories -&gt; Update</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在IDE中导入Maven项目时，代码中有时会提示&lt;code&gt;找不到某某类&lt;/code&gt;，基本上除JDK外得第三方包都出现红色提示。IDEA有以下几种方法解决（Eclipse的处理方法类似）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;重新执行导入命令&lt;/p&gt;
&lt;blockquote&gt;
      
    
    </summary>
    
      <category term="开发工具" scheme="https://lukezp.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://lukezp.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="maven" scheme="https://lukezp.github.io/tags/maven/"/>
    
      <category term="IDEA" scheme="https://lukezp.github.io/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>配置多个git账户</title>
    <link href="https://lukezp.github.io/2018/03/03/%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAgit%E8%B4%A6%E6%88%B7/"/>
    <id>https://lukezp.github.io/2018/03/03/一台机器上配置多个git账户/</id>
    <published>2018-03-03T14:45:16.000Z</published>
    <updated>2018-03-30T14:23:33.023Z</updated>
    
    <content type="html"><![CDATA[<p>在使用git过程中，会遇到使用多个ssh-key的情况，比如：github使用一个账号，gitee使用另一个账户。为了区分不同的ssh-key ，则创建多个密钥对文件。</p><ol><li><p>生成github的ssh-key</p><blockquote><p>ssh-keygen -t rsa -C “aaa@bbb.com” -f ~/.ssh/id_rsa-github</p></blockquote><p>过程中会要求输入密码，直接回车为空即可。</p><p>此时会产生id_rsa-github和id_rsa-github.pub两个文件。</p><p>如果不指定则默认文件id_rsa和id_rsa.pub。</p></li><li><p>同样的方式为gitee生成两个文件id_rsa-gitee和id_rsa-gitee.pub</p></li><li><p>默认情况下ssh-agent读取id_rsa，因此把添加到 ssh-agent 的高速缓存中。</p><blockquote><p>ssh-add ~/.ssh/id_rsa-github</p></blockquote></li><li><p>把公有粘贴到github或gitee的账户下即可。</p></li><li><p>在~/.ssh/目录下新建文件config，在里面指定不同的私钥对应的不同git服务器。</p><p>github的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName github.com</span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa-github</span><br></pre></td></tr></table></figure><p>gitee的配置</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host gitee.com</span><br><span class="line">  HostName gitee.com </span><br><span class="line">  PreferredAuthentications publickey </span><br><span class="line">  IdentityFile ~/.ssh/id-rsa-gitee</span><br></pre></td></tr></table></figure></li><li><p>测试连接</p><blockquote><p>ssh -T github.com<br>ssh -T gitee.com</p></blockquote></li><li><p>查看配置信息</p><p>git一般会根据配置文件的user.name和user.email来获取作者信息，如果使用不同账户信息的话，需要在使用前修改配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看配置信息</span><br><span class="line">git config --list </span><br><span class="line"># 设置全局的name和email</span><br><span class="line">git config --global user.name &quot;bbb&quot;</span><br><span class="line">git config --global user.email &quot;aaa@xxx.com&quot;</span><br><span class="line"># 设置团队项目的name和email，每次新创建一个项目，需要执行下</span><br><span class="line">git config --local user.name &quot;bbb&quot;</span><br><span class="line">git config --local user.email &quot;aaa@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用git过程中，会遇到使用多个ssh-key的情况，比如：github使用一个账号，gitee使用另一个账户。为了区分不同的ssh-key ，则创建多个密钥对文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;生成github的ssh-key&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="git" scheme="https://lukezp.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://lukezp.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>RomeVPN工具</title>
    <link href="https://lukezp.github.io/2018/02/12/RomeVPN/"/>
    <id>https://lukezp.github.io/2018/02/12/RomeVPN/</id>
    <published>2018-02-12T15:46:57.000Z</published>
    <updated>2018-03-10T03:44:48.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​    VPN是虚拟专用网络（Virtual Private Network）的简称，功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络中有广泛应用，VPN网关通过对数据包的加密和数据包目标地址的转换实现远程访问。例如某公司员工出差到外地，只要能上互联网就能利用VPN访问公司内网资源，提高办公效率。</p><p>​    罗马有一条谚语：“条条大路通罗马”，原话是“All Roads Lead to Rome”。因此起名为RomeVPN（中文名：罗马VPN）。</p><p>​         <strong>本软件是一款VPN工具，软件本身不内置任何VPN服务。</strong></p><p>​    在使用window操作系统建立VPN时，配置过程比较繁琐；在连接到VPN后，所有的网络流量都会经过VPN，一方面服务端会增加带宽，另一方面使用者不能直接同时使用内外网。在这种情况下诞生了该软件，尽管市面上已经有很多同类软件，更多的是网络加速器软件，个人不能自由的配置。开发该软件的目的是简化建立VPN的工作、简化VPN提供商的工作，并为其提供灵活可靠的路由配置。使用者只需在配置文件中添加VPN地址列表和路由列表。用户可以在软件上的VPN列表中选择一个，然后进行连接，只有匹配到配置文件中的路由才会走VPN代理，而其它的走正常的网络。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>​    在配置文件RomeVPN.exe.Config中有两个配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">addrUrl：VPN地址列表的URL</span><br><span class="line">routeUrl：路由列表的URL</span><br></pre></td></tr></table></figure><h2 id="配置文件格式"><a href="#配置文件格式" class="headerlink" title="配置文件格式"></a>配置文件格式</h2><blockquote><p>​    # 注释符<br>​    每一行以/r/n作为符号结束。</p></blockquote><h3 id="VPN地址列表格式"><a href="#VPN地址列表格式" class="headerlink" title="VPN地址列表格式"></a>VPN地址列表格式</h3><p>​    <code>名称||连接类型|IP地址|IP端口|日期||用户名|密码</code></p><h3 id="路由列表格式"><a href="#路由列表格式" class="headerlink" title="路由列表格式"></a>路由列表格式</h3><p>​    <code>ip|mask</code></p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>用户使用该软件，则表明同意该软件的许可协议：<a href="https://github.com/lukezp/RomeVPN/blob/master/RomeVPN-license.md" target="_blank" rel="noopener"><strong>软件许可使用协议</strong></a> ；否则请卸载。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://github.com/lukezp/RomeVPN/releases" target="_blank" rel="noopener">RomeVPN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;​    VPN是虚拟专用网络（Virtual Private Network）的简称，功能是：在公用网络上建立专用网络，进行加密通讯。在企
      
    
    </summary>
    
      <category term="VPN" scheme="https://lukezp.github.io/categories/VPN/"/>
    
    
      <category term="vpn" scheme="https://lukezp.github.io/tags/vpn/"/>
    
      <category term="工具" scheme="https://lukezp.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="window" scheme="https://lukezp.github.io/tags/window/"/>
    
  </entry>
  
</feed>
